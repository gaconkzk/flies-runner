# BUILD-USING:    podman build -t theflies/runner-base .
# TEST-USING:     podman run --rm -i -t --name=test-runner-base --entrypoint=/bin/bash theflies/runner-base -s
# RUN-USING:      podman run --rm --name=runner-base theflies/runner-base --help

# Pull base image.
FROM --platform=linux/amd64 buildpack-deps:focal

RUN apt-get update -qq

# gpg keys listed at https://github.com/nodejs/node
RUN set -ex \
  && for key in \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    141F07595B7B3FFE74309A937405533BE57C7D57 \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    74F12602B6F1C4E913FAA37AD3A89613643B6201 \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    61FC681DFB92A079F1685E77973F295594EC4689 \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
    108F52B48DB57BB0CC439B2997B01419BD92F80A \
    B9E2F5981AA6E0CD28160D9FF13993A75599653C \
  ; do \
    gpg --keyserver hkps://keys.openpgp.org --recv-keys "$key"; \
  done

ENV NPM_CONFIG_LOGLEVEL info
ENV NODE_VERSION 16.17.0

# Install NodeJS
RUN curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 \
  && rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt

# Set the env variables to non-interactive
ENV DEBIAN_FRONTEND noninteractive
ENV DEBIAN_PRIORITY critical
ENV DEBCONF_NOWARNINGS yes
ENV TERM linux
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# ADD bestfly user
RUN useradd bestfly
RUN rm -rf ~bestfly && cp -a ~root ~bestfly && chown -R bestfly:bestfly ~bestfly

# Define default command.
CMD ["bash"]

# Append any relevant run args as per the help

ENV NODE_ENV production
ENTRYPOINT ["timeout", "15", "node"]

# Install Prereqs
RUN apt-get install -y python-is-python3 git software-properties-common

# Install Redis
RUN apt-get install -y redis-server

# Install SQLITE
RUN apt-get install -y sqlite libsqlite3-dev

# Install MongoDB
RUN apt-get install libssl1.1
RUN wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add -
RUN echo "deb [arch=amd64,arm64] http://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list
RUN apt-get update && apt-get install -y mongodb-org

# Install MariaDB
RUN curl -LsS -O https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
RUN bash mariadb_repo_setup --mariadb-server-version=10.9.2
RUN apt-get update && apt-get install -y mariadb-server mariadb-client
RUN service mariadb stop
RUN mysql_install_db

# Install Postgres
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
RUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -
RUN apt-get update && apt-get install -y postgresql postgresql-contrib
ENV PATH /usr/lib/postgresql/14/bin:$PATH
RUN mkdir /pgdata
RUN chown bestfly /pgdata
USER bestfly
RUN /usr/lib/postgresql/14/bin/initdb -D /pgdata/pg
ENV PGDATA /pgdata/pg
USER root
RUN usermod -G postgres bestfly

# Install RabbitMQ
# RUN echo 'deb http://www.rabbitmq.com/debian/ testing main' | tee /etc/apt/sources.list.d/rabbitmq.list
# RUN wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | apt-key add -
# RUN apt-get update && apt-get install -y rabbitmq-server

# Install CouchDB
# RUN add-apt-repository ppa:couchdb/stable -y
# RUN apt-get update && apt-get install -y couchdb

# Install Cairo graphics
# RUN apt-get install -y libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++

RUN mkdir /.npm-global
RUN node --version
RUN npm config set prefix '/.npm-global'
RUN echo 'export PATH=\"/.npm-global/bin:$PATH\"' >> ~/.profile
ENV PATH /.npm-global/bin:$PATH

# Install Node testing frameworks & additional frameworks
RUN npm install -g chai mocha pnpm
RUN mkdir -p /home/bestfly/.pnpm-store
RUN echo 'export PATH=\"/home/bestfly/.pnpm-store:$PATH\"' >> ~/.profile
ENV PATH /home/bestfly/.pnpm-store:$PATH
ENV PNPM_HOME /home/bestfly/.pnpm-store
